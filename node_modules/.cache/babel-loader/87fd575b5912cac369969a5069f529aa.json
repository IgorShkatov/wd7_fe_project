{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport * as ACT from './actions';\nconst initialStore = {\n  catalogList: [],\n  isLoading: false,\n  fetchStatus: null\n};\n\nfunction rootReducer(store = initialStore, action) {\n  switch (action.type) {\n    case ACT.UPDATE_LIST:\n      // случилось событие - обновить список фильмов\n      return { ...store,\n        movieList: action.payload\n      };\n\n    case ACT.UPDATE_LOADING:\n      // случилось событие - обновить индикатор загрузки данных с сервера\n      return { ...store,\n        isLoading: action.payload\n      };\n\n    case ACT.FETCH_SUCCESS: // случилось событие - обновить статус загрузки - УСПЕХ\n\n    case ACT.FETCH_FAILED:\n      // случилось событие - обновить статус загрузки - ПРОВАЛ\n      return { ...store,\n        fetchStatus: action.payload\n      };\n  }\n\n  return store;\n}\n\nexport default (() => combineReducers({\n  app: rootReducer\n}));","map":{"version":3,"sources":["/Users/dmitrijkotelevic/dev/wd7_fe_project/src/store/reducer.js"],"names":["combineReducers","ACT","initialStore","catalogList","isLoading","fetchStatus","rootReducer","store","action","type","UPDATE_LIST","movieList","payload","UPDATE_LOADING","FETCH_SUCCESS","FETCH_FAILED","app"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,WAAW,EAAE;AAHM,CAArB;;AAMA,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAmD;AAEjD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,GAAG,CAACS,WAAT;AAAsB;AACpB,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,SAAS,EAAEH,MAAM,CAACI;AAFb,OAAP;;AAKF,SAAKX,GAAG,CAACY,cAAT;AAAyB;AACvB,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,SAAS,EAAEI,MAAM,CAACI;AAFb,OAAP;;AAKF,SAAKX,GAAG,CAACa,aAAT,CAdF,CAc0B;;AACxB,SAAKb,GAAG,CAACc,YAAT;AAAuB;AACrB,aAAO,EACL,GAAGR,KADE;AAELF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAFf,OAAP;AAhBJ;;AAuBA,SAAOL,KAAP;AACD;;AAED,gBAAe,MAAMP,eAAe,CAAC;AACnCgB,EAAAA,GAAG,EAAEV;AAD8B,CAAD,CAApC","sourcesContent":["import { combineReducers } from \"redux\";\nimport * as ACT from './actions';\n\nconst initialStore = {\n  catalogList: [],\n  isLoading: false,\n  fetchStatus: null,\n};\n\nfunction rootReducer(store = initialStore, action) {\n\n  switch (action.type) {\n\n    case ACT.UPDATE_LIST: // случилось событие - обновить список фильмов\n      return {\n        ...store,\n        movieList: action.payload,\n      }\n\n    case ACT.UPDATE_LOADING: // случилось событие - обновить индикатор загрузки данных с сервера\n      return {\n        ...store,\n        isLoading: action.payload,\n      }\n\n    case ACT.FETCH_SUCCESS: // случилось событие - обновить статус загрузки - УСПЕХ\n    case ACT.FETCH_FAILED: // случилось событие - обновить статус загрузки - ПРОВАЛ\n      return {\n        ...store,\n        fetchStatus: action.payload,\n      }\n\n  }\n\n  return store;\n}\n\nexport default () => combineReducers({\n  app: rootReducer,\n})\n"]},"metadata":{},"sourceType":"module"}